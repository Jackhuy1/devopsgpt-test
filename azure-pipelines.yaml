trigger:
- main

variables:
  ACR_NAME: terratamldacr
  IMAGE_NAME: snake-game
  K8S_NAMESPACE: default
  AZURE_SUBSCRIPTION: azure-service-connection
  AZURE_RESOURCE_GROUP: terraform-aks
  AKS_CLUSTER_NAME: terra-aks
  ACR_SERVICE_CONNECTION: acr-connection
  DOCKER_REGISTRY_SERVICE_CONNECTION: acr-connection

stages:
- stage: Build
  displayName: Build Docker Image
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: '$(ACR_SERVICE_CONNECTION)'
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        repository: '$(ACR_NAME).azurecr.io/$(IMAGE_NAME)'
        dockerfile: 'Dockerfile'
        tags: |
          $(Build.BuildId)

- stage: Test
  displayName: Run Unit Tests
  dependsOn: Build
  jobs:
  - job: Test
    pool:
      vmImage: 'ubuntu-latest'
    container: python:3.9
    steps:
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m unittest tests/test_app.py
      displayName: Run Python Unit Tests

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Test
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: 'aks'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            displayName: Apply Kubernetes Manifests
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: '$(AZURE_SUBSCRIPTION)'
              azureResourceGroup: '$(AZURE_RESOURCE_GROUP)'
              kubernetesCluster: '$(AKS_CLUSTER_NAME)'
              command: 'apply'
              useConfigurationFile: true
              configuration: 'k8s/'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              dockerRegistryEndpoint: '$(DOCKER_REGISTRY_SERVICE_CONNECTION)'
          - task: Kubernetes@1
            displayName: Update Deployment Image
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: '$(AZURE_SUBSCRIPTION)'
              azureResourceGroup: '$(AZURE_RESOURCE_GROUP)'
              kubernetesCluster: '$(AKS_CLUSTER_NAME)'
              command: 'set'
              arguments: >
                image deployment/$(IMAGE_NAME) $(IMAGE_NAME)-container=$(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(Build.BuildId)
              namespace: '$(K8S_NAMESPACE)'
