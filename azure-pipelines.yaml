trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: snake-game
  containerRegistry: terratamldacr.azurecr.io
  dockerRegistryServiceConnection: acr-connection
  azureResourceManagerServiceConnection: azure-service-connection
  kubernetesServiceConnection: aks-connection
  acrUsername: $(ACR_USERNAME)       # Set these pipeline variables securely in Azure DevOps pipeline settings or via Key Vault
  acrPassword: $(ACR_PASSWORD)

steps:
- script: |
    echo "Running tests..."
    npm install
    npm test
  displayName: Run tests

- task: Docker@2
  displayName: Build and push Docker image
  inputs:
    command: buildAndPush
    repository: $(containerRegistry)/$(imageName)
    dockerfile: Dockerfile
    tags: latest
    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

- task: AzureCLI@2
  displayName: Create ACR secret in AKS cluster
  inputs:
    azureSubscription: $(azureResourceManagerServiceConnection)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      set -e
      echo "Creating or updating ACR pull secret in AKS..."
      kubectl config use-context $(kubectl config current-context)
      kubectl create secret docker-registry acr-auth \
        --docker-server=$(containerRegistry) \
        --docker-username=$(acrUsername) \
        --docker-password=$(acrPassword) \
        -n default --dry-run=client -o yaml | kubectl apply -f -
  env:
    acrUsername: $(acrUsername)
    acrPassword: $(acrPassword)

- task: KubernetesManifest@0
  displayName: Deploy to AKS
  inputs:
    action: deploy
    kubernetesServiceConnection: $(kubernetesServiceConnection)
    manifests: |
      k8s/deployment.yaml
      k8s/service.yaml
      k8s/ingress.yaml
    containers: |
      $(containerRegistry)/$(imageName):latest
